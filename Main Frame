import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MainFrame extends JFrame {
    public MainFrame() {
        setTitle("Calculator");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 400);
        setLayout(new BorderLayout());

        CalculatorPanel calculatorPanel = new CalculatorPanel();
        add(calculatorPanel, BorderLayout.CENTER);
    }

    private static class CalculatorPanel extends JPanel {
        private final JTextField textField;
        private String operator = "";
        private double num1 = 0;

        public CalculatorPanel() {
            setLayout(new BorderLayout());

            textField = new JTextField();
            textField.setFont(new Font("Times New Roman", Font.PLAIN, 24));
            textField.setHorizontalAlignment(JTextField.RIGHT);
            add(textField, BorderLayout.NORTH);

            JPanel buttonPanel = new JPanel();
            buttonPanel.setLayout(new GridLayout(4, 5, 5, 5));

            String[] buttonLabels = {
                    "7", "8", "9", "/", "C",
                    "4", "5", "6", "*", "^",
                    "1", "2", "3", "-", "√",
                    ".", "0", "=", "+", "+/-"
            };

            for (String label : buttonLabels) {
                JButton button = new JButton(label);
                button.setFont(new Font("Times New Roman", Font.PLAIN, 18));
                buttonPanel.add(button);
                button.addActionListener(new CalculatorActionListener());
            }

            add(buttonPanel, BorderLayout.CENTER);
        }
        private void setResult(double result) {
            textField.setText(result % 1 == 0 ? String.valueOf((int) result) : String.valueOf(result));
        }

        private void reset() {
            textField.setText("");
            operator = "";
            num1 = 0;
        }

        private class CalculatorActionListener implements ActionListener {
            @Override
            public void actionPerformed(ActionEvent e) {
                JButton button = (JButton) e.getSource();
                String buttonText = button.getText();

                switch (buttonText) {
                    case "C":
                        reset();
                        break;
                    case "=":
                        if (!operator.isEmpty() && !textField.getText().isEmpty()) {
                            double num2 = Double.parseDouble(textField.getText());
                            try {
                                double result = Calculate.calculate(num1,num2,operator);
                                setResult(result);
                                operator = "";
                            }
                            catch (ArithmeticException | IllegalArgumentException ex) {
                                textField.setText("Error");
                            }
                        }
                        break;
                    case "+", "-", "*", "/", "^":
                        if (!textField.getText().isEmpty()) {
                            num1 = Double.parseDouble(textField.getText());
                            operator = buttonText;
                            textField.setText("");
                        }
                        break;
                    case "√":
                        if (!textField.getText().isEmpty()) {
                            num1 = Double.parseDouble(textField.getText());
                            try {
                                double result = Calculate.calculate(num1,0,"√");
                                setResult(result);
                                operator = "";
                            }
                            catch (ArithmeticException | IllegalArgumentException ex) {
                                textField.setText("Error");
                            }

                        }
                        break;
                    case "+/-" :
                        if (!textField.getText().isEmpty()) {
                           double currentNumber = Double.parseDouble(textField.getText());
                           currentNumber *= -1;
                           setResult(currentNumber);
                        }
                        break;
                    default:
                        textField.setText(textField.getText() + buttonText);

                }
            }
        }
    }

    public static void main(String[] args) {
        javax.swing.SwingUtilities.invokeLater(() -> {
            MainFrame frame = new MainFrame();
            frame.setVisible(true);
        });
    }
}
