//unit tests for calculate function
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class CalculateTest {
//test addition test
@Test
public void addTest() {
    double result = Calculate.calculate(2,3, "+");
    assertEquals(result, 5);
}
//test for positive result subtraction test
@Test
public void subtractPositiveTest() {
    double result = Calculate.calculate(3, 2, "-");
    assertEquals(result, 1);
}
//test for negative result subtraction test
@Test
public void subtractNegativeTest() {
    double result = Calculate.calculate(2, 3, "-");
    assertEquals(result, -1);
}
//test for multiplication
@Test
public void multiplyTest() {
    double result = Calculate.calculate(3, 2, "*");
    assertEquals(result, 6);
}
//test for division
@Test
public void divisionTest() {
    double result = Calculate.calculate(6, 2, "/");
    assertEquals(result, 3);
}
//test division error over 0/0
@Test
public void divisionZeroTest() {
    assertThrows(ArithmeticException.class, ()->Calculate.calculate(6, 0, "/"));
}
//test for exponent result
@Test
public void exponentTest() {
    double result = Calculate.calculate(2,3,"^");
    assertEquals(result, 8);
}
//test for square root result
@Test
public void sqrtTest() {
    double result = Calculate.calculate(4,0,"√");
    assertEquals(result,2);
}
//test for square root exception
@Test
public void sqrtExceptionTest() {
    assertThrows(IllegalArgumentException.class, ()->Calculate.calculate(-4,0,"√"));
}
//test that an exception thrown for invalid function
@Test
public void invalidDataTest() {
    assertThrows(IllegalArgumentException.class, ()->Calculate.calculate(6,0,"y"));
}
}
